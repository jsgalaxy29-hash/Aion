@using Aion.AppHost.Services
@using Aion.Domain.Contracts
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Icons
@inherits LayoutComponentBase
@inject IAionThemeService ThemeService
@inject AuthenticationStateProvider Auth
@inject IAuthService AuthService
@inject NavigationManager Navigation

<HeadContent>

    <!-- 1) bundle des CSS isolées (nom = Assembly du projet host) -->
    <link rel="stylesheet" href="Aion.AppHost.styles.css" />

    <!-- 2) reboot Fluent (optionnel mais utile) -->
    <link rel="stylesheet" href="_content/Microsoft.FluentUI.AspNetCore.Components/css/reboot.css" />
</HeadContent>

<FluentDesignTheme StorageName="ThemeSvc.Current" Mode="DesignThemeModes.System">

    <CascadingAuthenticationState>
        <main class="page" style="min-height:100vh;display:flex;flex-direction:column;">
            <div style="display:flex;gap:.5rem;align-items:center;padding:.5rem">
                <FluentButton Appearance="Appearance.Accent" OnClick="() => ThemeSvc.UseLight()">Clair</FluentButton>
                <FluentButton Appearance="Appearance.Outline" OnClick="() => ThemeSvc.UseDark()">Sombre</FluentButton>
                <FluentButton Appearance="Appearance.Stealth" OnClick='() => ThemeSvc.SetAccent("#0D3B66", "#D4AF37")'>
                    Aion
                </FluentButton>
                <FluentAnchor Href="/dashboard">Dashboard</FluentAnchor>
                <FluentAnchor Href="/login">Login</FluentAnchor>
            </div>

            <div style="margin:1rem">
                <FluentStack Horizontal="true" Style="height:100vh">
                    <!-- Outlook bar (menu) -->
                    <div class="p-2" style="width:260px; overflow:auto">
                        @if (_authState?.User.Identity?.IsAuthenticated == true)
                        {
                            <OutlookBar />
                        }
                    </div>
                    <FluentDivider Vertical="true" />
                    <!-- Main content area -->
                    <div class="flex-grow p-2 overflow-auto">
                        @if (_authState?.User.Identity?.IsAuthenticated == true)
                        {
                            <TabHost />
                        }
                        else
                        {
                            @Body
                        }
                    </div>
                    <!-- Simple header with user info and sign out -->
                    <div class="position-fixed top-0 end-0 p-2" style="z-index:1000">
                        @if (_authState?.User.Identity?.IsAuthenticated == true)
                        {
                            <FluentButton OnClick="Logout">Se déconnecter (@_authState.User.Identity?.Name)</FluentButton>
                        }
                    </div>
                </FluentStack>


                <FluentToastProvider />
                <FluentDialogProvider />
                <FluentTooltipProvider />
                <FluentMessageBarProvider />
                <FluentMenuProvider />
            </div>
        </main>
        <FluentDialogProvider />
        <FluentToastProvider />
    </CascadingAuthenticationState>


</FluentDesignTheme>

@* <FluentProvider Theme="@(ThemeService.Current)">


</FluentProvider> *@



@code {
    [Microsoft.AspNetCore.Components.Inject] Aion.AppHost.Services.IAionThemeService ThemeSvc { get; set; } = default!;

    private AuthenticationState? _authState;

    protected override async Task OnInitializedAsync()
    {
        _authState = await Auth.GetAuthenticationStateAsync();
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login", true);
    }

}
